@using MMIP.Shared.Entities;
@using MMIP.Shared.Views;
@using MMIP.Client.Controllers
@inject IStringLocalizer<ApplicationResource> Localizer;
@inject NavigationManager NavigationManager;

<div class="root">
    <MudCard @onclick="() => _navigateToChallengeView(CardData.ChallengeId)" Elevation="4" Class="flex-auto">
        <MudCardMedia Image=@CardData.BannerImagePath Height="100"></MudCardMedia>
        <MudCardContent Class="d-flex flex-column flex-auto gap-2">
            <h2 class="center-text">@CardData.Title</h2>
            <MudStack Class="py-2 px-1" Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Spacing="2">
                <h3>@CardData.OrganizationName</h3>
                <div class="logo">
                    <MudImage Fluid="true" ObjectFit="ObjectFit.Cover" Src="Assets/Img/1600x888.jpg"></MudImage>
                </div>
            </MudStack>
            <p class="center-text">@CardData.ShortDescription</p>
            <MudDivider></MudDivider>
            <div class="d-inline-flex justify-center flex-wrap">
                @foreach (var tag in CardData.Tags.Take(VisibleTagsLimit))
                {
                    <MudChip Size="Size.Small" Color="Color.Primary">@tag</MudChip>
                }

                @if (_totalAmountOfTags > VisibleTagsLimit)
                {
                    <MudTooltip Arrow="true" Placement="Placement.Bottom" Class="grey lighten-2 icon-tooltip">
                        <ChildContent>
                            <MudChip Size="Size.Small" Color="Color.Primary">+@_amountOfAdditionalTags @Localizer["OtherTags"]</MudChip>
                        </ChildContent>
                        <TooltipContent>
                            <h3>@Localizer["RemainingTags"]:</h3>
                            @foreach (var tag in CardData.Tags.Skip(VisibleTagsLimit))
                            {
                                <p>@tag</p>
                            }
                        </TooltipContent>
                    </MudTooltip>
                }
            </div>
        </MudCardContent>
    </MudCard>
</div>

@code {
    private const int VisibleTagsLimit = 5;

    [Parameter] public ChallengeCardView CardData { get; set; } = null!;

    private int _totalAmountOfTags;
    private int _amountOfAdditionalTags => _totalAmountOfTags - VisibleTagsLimit;

    protected override void OnInitialized()
    {
        _totalAmountOfTags = CardData.Tags.Length;
    }

    private void _navigateToChallengeView(Guid challengeId)
    {
        NavigationManager.NavigateTo($"/challenge-view/{challengeId}");
    }

}