@using MMIP.Shared.Entities;
@using MMIP.Shared.Views;
@using MMIP.Client.Controllers
@inject IStringLocalizer<ApplicationResource> Localizer;
@inject NavigationManager NavigationManager;

<MudCard @onclick="() => NavigateToChallengeView(CardData.ChallengeId)" Elevation="4" Class="rounded-lg custom-card">
    <MudCardMedia Image=@CardData.BannerImagePath Height="100"></MudCardMedia>
    <MudCardContent>
        <h2 class="card-centered-text">@CardData.Title</h2>
        <div class="d-flex my-4 align-content-center align-center justify-space-between" style="height: 100%; width: 100%;">
            <h3 class="" style="overflow: hidden; width: 47%">@CardData.OrganizationName</h3>
            <MudImage ObjectFit="ObjectFit.Cover" Class="" Src="Assets/Img/1600x888.jpg" Style="max-height: 100px; width: 47%"></MudImage>
        </div>
        <p class="mb-4 card-centered-text">@CardData.ShortDescription</p>
        <MudDivider></MudDivider>
        <div class="d-flex justify-center flex-wrap my-4">
            @{
                foreach (var tag in CardData.Tags.Take(VisibleTagsLimit))
                {
                    <MudChip Size="Size.Small" Color="Color.Primary">@tag</MudChip>
                }
                if (_totalAmountOfTags >= VisibleTagsLimit)
                {
                    <MudTooltip Arrow="true" Placement="Placement.Bottom" Class="grey lighten-2 icon-tooltip">
                        <ChildContent>
                            <MudChip Size="Size.Small" Color="Color.Primary">+@_amountOfAdditionalTags @Localizer["OtherTags"]</MudChip>
                        </ChildContent>
                        <TooltipContent>
                            <h3>@Localizer["RemainingTags"]:</h3>
                            @foreach (var tag in CardData.Tags.Skip(VisibleTagsLimit))
                            {
                                <p>@tag</p>
                            }
                        </TooltipContent>
                    </MudTooltip>
                }
            }
        </div>
    </MudCardContent>
</MudCard>

@code {
        private const int VisibleTagsLimit = 5;

    [Parameter]
    public ChallengeCardView CardData { get; set; } = null!;

    private int _totalAmountOfTags;
    private int _amountOfAdditionalTags => _totalAmountOfTags - VisibleTagsLimit;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _totalAmountOfTags = CardData.Tags.Length;
    }

    public void NavigateToChallengeView(Guid challengeId)
    {
        NavigationManager.NavigateTo($"/challenge-view/{challengeId}");
    }

}